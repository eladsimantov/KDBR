function [x] = forward_kin(q)
%FORWARD_KIN accepts vectors of joint variables and returns all possible
%Forward Kinematics solutions 
%   q - A joints vector of size (d1; d2; d3)
%   x - A task Matrix of size (x1; y1; theta) x Number of FK solutions
%   theta returned is in RAD.

d1 = q(1); d2 = q(2); d3 = q(3);
global r L H
syms t
polynom = 3*r^6*t^2 + 3*r^6*t^4 + r^6*t^6 + 3*d1*r^5 - 3*d2*r^5 + H^2*d1^4 + H^4*d1^2 + H^2*d2^4 + H^4*d2^2 + r^6 + 5*H^2*r^4 + H^4*r^2 - 3*L^2*r^4 + d1^2*d2^4 - 2*d1^3*d2^3 + d1^4*d2^2 + d1^2*d3^4 - 2*d1^3*d3^3 + d1^4*d3^2 + d2^2*d3^4 - 2*d2^3*d3^3 + d2^4*d3^2 + 4*d1^2*r^4 + 3*d1^3*r^3 + d1^4*r^2 + 4*d2^2*r^4 - 3*d2^3*r^3 + d2^4*r^2 + d3^2*r^4 + d3^4*r^2 - 2*H^2*d1*d2^3 - 2*H^2*d1^3*d2 - 2*H^2*d1^3*d3 - 2*H^2*d2^3*d3 - 2*3^(1/2)*H^3*r^3 + 11*H^2*d1*r^3 + 3*H^2*d1^3*r - 11*H^2*d2*r^3 - 3*H^2*d2^3*r - 6*L^2*d1*r^3 + 6*L^2*d2*r^3 + 2*d1*d2^2*d3^3 + 2*d1*d2^3*d3^2 + 2*d1^2*d2*d3^3 + 2*d1^2*d2^3*d3 + 2*d1^3*d2*d3^2 + 2*d1^3*d2^2*d3 + 8*d1*d2^2*r^3 - 5*d1*d2^3*r^2 - 8*d1^2*d2*r^3 - 5*d1^2*d2^3*r - 5*d1^3*d2*r^2 + 5*d1^3*d2^2*r + d1*d3^2*r^3 - 2*d1*d3^3*r^2 - d1^2*d3*r^3 - 4*d1^2*d3^3*r + d1^3*d3*r^2 + d1^3*d3^2*r - d2*d3^2*r^3 - 2*d2*d3^3*r^2 + d2^2*d3*r^3 + 4*d2^2*d3^3*r + d2^3*d3*r^2 - d2^3*d3^2*r + 3*d1*r^5*t^2 - 3*d2*r^5*t^2 - 3*d1*r^5*t^4 + 3*d2*r^5*t^4 - 3*d1*r^5*t^6 + 3*d2*r^5*t^6 - 4*H^2*L^2*d1^2 - 4*H^2*L^2*d2^2 - 4*H^2*L^2*r^2 + 2*H^2*d1^2*d2^2 + 2*H^2*d1^2*d3^2 + 2*H^2*d2^2*d3^2 + 8*H^2*d1^2*r^2 + 8*H^2*d2^2*r^2 + 2*H^2*d3^2*r^2 + 3*H^2*d1^4*t^2 + 3*H^4*d1^2*t^2 + 3*H^2*d2^4*t^2 + 3*H^4*d2^2*t^2 + 3*H^2*d1^4*t^4 + 3*H^4*d1^2*t^4 + 3*H^2*d2^4*t^4 + 3*H^4*d2^2*t^4 + H^2*d1^4*t^6 + H^4*d1^2*t^6 + H^2*d2^4*t^6 + H^4*d2^2*t^6 - 3*L^2*d1^2*r^2 - 3*L^2*d2^2*r^2 - 6*d1^2*d2^2*d3^2 - H^2*r^4*t^2 + 3*H^4*r^2*t^2 - H^2*r^4*t^4 + 3*H^4*r^2*t^4 + 5*H^2*r^4*t^6 + H^4*r^2*t^6 - 9*L^2*r^4*t^2 - 9*L^2*r^4*t^4 - 3*L^2*r^4*t^6 + 9*d1^2*d2^2*r^2 + 3*d1^2*d2^4*t^2 - 6*d1^3*d2^3*t^2 + 3*d1^4*d2^2*t^2 + 3*d1^2*d3^4*t^2 - 6*d1^3*d3^3*t^2 + 3*d1^4*d3^2*t^2 + 3*d1^2*d2^4*t^4 - 6*d1^3*d2^3*t^4 + 3*d2^2*d3^4*t^2 + 3*d1^4*d2^2*t^4 - 6*d2^3*d3^3*t^2 + 3*d2^4*d3^2*t^2 + 3*d1^2*d3^4*t^4 - 6*d1^3*d3^3*t^4 + 3*d1^4*d3^2*t^4 + d1^2*d2^4*t^6 - 2*d1^3*d2^3*t^6 + 3*d2^2*d3^4*t^4 + d1^4*d2^2*t^6 - 6*d2^3*d3^3*t^4 + 3*d2^4*d3^2*t^4 + d1^2*d3^4*t^6 - 2*d1^3*d3^3*t^6 + d1^4*d3^2*t^6 + d2^2*d3^4*t^6 - 2*d2^3*d3^3*t^6 + d2^4*d3^2*t^6 + 4*d1^2*r^4*t^2 + 3*d1^3*r^3*t^2 + 3*d1^4*r^2*t^2 + 4*d2^2*r^4*t^2 - 3*d2^3*r^3*t^2 + 3*d2^4*r^2*t^2 + 4*d1^2*r^4*t^4 - 3*d1^3*r^3*t^4 + 3*d1^4*r^2*t^4 + 19*d3^2*r^4*t^2 + 3*d3^4*r^2*t^2 + 4*d2^2*r^4*t^4 + 3*d2^3*r^3*t^4 + 3*d2^4*r^2*t^4 + 4*d1^2*r^4*t^6 - 3*d1^3*r^3*t^6 + d1^4*r^2*t^6 + 19*d3^2*r^4*t^4 + 3*d3^4*r^2*t^4 + 4*d2^2*r^4*t^6 + 3*d2^3*r^3*t^6 + d2^4*r^2*t^6 + d3^2*r^4*t^6 + d3^4*r^2*t^6 - 2*H^4*d1*d2 - 2*3^(1/2)*H*r^5 + 2*H^4*d1*r - 2*H^4*d2*r - 2*d1*d2*d3^4 - 2*d1*d2^4*d3 - 2*d1^4*d2*d3 - 7*d1*d2*r^4 + d1*d2^4*r - d1^4*d2*r - d1*d3*r^4 + 2*d1*d3^4*r + d1^4*d3*r - d2*d3*r^4 - 2*d2*d3^4*r - d2^4*d3*r - 6*H^2*d1*d2^3*t^2 - 6*H^2*d1^3*d2*t^2 - 6*H^2*d1^3*d3*t^2 - 6*H^2*d1*d2^3*t^4 - 6*H^2*d1^3*d2*t^4 - 6*H^2*d2^3*d3*t^2 - 6*H^2*d1^3*d3*t^4 - 2*H^2*d1*d2^3*t^6 - 2*H^2*d1^3*d2*t^6 - 6*H^2*d2^3*d3*t^4 - 2*H^2*d1^3*d3*t^6 - 2*H^2*d2^3*d3*t^6 - 2*3^(1/2)*H^3*r^3*t^2 + 2*3^(1/2)*H^3*r^3*t^4 + 2*3^(1/2)*H^3*r^3*t^6 - 21*H^2*d1*r^3*t^2 + 3*H^2*d1^3*r*t^2 - 28*H*d1^2*r^3*t^3 + 21*H^2*d2*r^3*t^2 - 3*H^2*d2^3*r*t^2 + 28*H*d2^2*r^3*t^3 + 21*H^2*d1*r^3*t^4 - 3*H^2*d1^3*r*t^4 + 18*H*d1^2*r^3*t^5 - 12*H*d1^3*r^2*t^5 - 21*H^2*d2*r^3*t^4 + 3*H^2*d2^3*r*t^4 - 18*H*d2^2*r^3*t^5 - 12*H*d2^3*r^2*t^5 - 11*H^2*d1*r^3*t^6 - 3*H^2*d1^3*r*t^6 + 11*H^2*d2*r^3*t^6 + 3*H^2*d2^3*r*t^6 - 6*L^2*d1*r^3*t^2 + 6*L^2*d2*r^3*t^2 + 6*L^2*d1*r^3*t^4 - 6*L^2*d2*r^3*t^4 + 6*L^2*d1*r^3*t^6 - 6*L^2*d2*r^3*t^6 + 6*d1*d2^2*d3^3*t^2 + 6*d1*d2^3*d3^2*t^2 + 6*d1^2*d2*d3^3*t^2 + 6*d1^2*d2^3*d3*t^2 + 6*d1^3*d2*d3^2*t^2 + 6*d1^3*d2^2*d3*t^2 + 6*d1*d2^2*d3^3*t^4 + 6*d1*d2^3*d3^2*t^4 + 6*d1^2*d2*d3^3*t^4 + 6*d1^2*d2^3*d3*t^4 + 6*d1^3*d2*d3^2*t^4 + 6*d1^3*d2^2*d3*t^4 + 2*d1*d2^2*d3^3*t^6 + 2*d1*d2^3*d3^2*t^6 + 2*d1^2*d2*d3^3*t^6 + 2*d1^2*d2^3*d3*t^6 + 2*d1^3*d2*d3^2*t^6 + 2*d1^3*d2^2*d3*t^6 - 4*3^(1/2)*d1^3*r^3*t^3 - 4*3^(1/2)*d2^3*r^3*t^3 + 4*3^(1/2)*d1^2*r^4*t^5 - 2*3^(1/2)*d1^3*r^3*t^5 + 8*3^(1/2)*d3^3*r^3*t^3 - 4*3^(1/2)*d2^2*r^4*t^5 - 2*3^(1/2)*d2^3*r^3*t^5 + 4*3^(1/2)*d3^3*r^3*t^5 - 24*d1*d2^2*r^3*t^2 + 9*d1*d2^3*r^2*t^2 + 24*d1^2*d2*r^3*t^2 - 5*d1^2*d2^3*r*t^2 + 9*d1^3*d2*r^2*t^2 + 5*d1^3*d2^2*r*t^2 + 33*d1*d3^2*r^3*t^2 - 6*d1*d3^3*r^2*t^2 - 33*d1^2*d3*r^3*t^2 - 4*d1^2*d3^3*r*t^2 - 21*d1^3*d3*r^2*t^2 + d1^3*d3^2*r*t^2 + 24*d1*d2^2*r^3*t^4 + 9*d1*d2^3*r^2*t^4 - 33*d2*d3^2*r^3*t^2 - 6*d2*d3^3*r^2*t^2 - 24*d1^2*d2*r^3*t^4 + 5*d1^2*d2^3*r*t^4 + 9*d1^3*d2*r^2*t^4 - 5*d1^3*d2^2*r*t^4 + 33*d2^2*d3*r^3*t^2 + 4*d2^2*d3^3*r*t^2 - 21*d2^3*d3*r^2*t^2 - d2^3*d3^2*r*t^2 - 33*d1*d3^2*r^3*t^4 - 6*d1*d3^3*r^2*t^4 + 33*d1^2*d3*r^3*t^4 + 4*d1^2*d3^3*r*t^4 - 21*d1^3*d3*r^2*t^4 - d1^3*d3^2*r*t^4 - 8*d1*d2^2*r^3*t^6 - 5*d1*d2^3*r^2*t^6 + 33*d2*d3^2*r^3*t^4 - 6*d2*d3^3*r^2*t^4 + 8*d1^2*d2*r^3*t^6 + 5*d1^2*d2^3*r*t^6 - 5*d1^3*d2*r^2*t^6 - 5*d1^3*d2^2*r*t^6 - 33*d2^2*d3*r^3*t^4 - 4*d2^2*d3^3*r*t^4 - 21*d2^3*d3*r^2*t^4 + d2^3*d3^2*r*t^4 - d1*d3^2*r^3*t^6 - 2*d1*d3^3*r^2*t^6 + d1^2*d3*r^3*t^6 + 4*d1^2*d3^3*r*t^6 + d1^3*d3*r^2*t^6 - d1^3*d3^2*r*t^6 + d2*d3^2*r^3*t^6 - 2*d2*d3^3*r^2*t^6 - d2^2*d3*r^3*t^6 - 4*d2^2*d3^3*r*t^6 + d2^3*d3*r^2*t^6 + d2^3*d3^2*r*t^6 - 5*3^(1/2)*H*d1*r^4 - 3^(1/2)*H*d1^4*r + 5*3^(1/2)*H*d2*r^4 - 3^(1/2)*H*d2^4*r - 12*H^2*L^2*d1^2*t^2 - 12*H^2*L^2*d2^2*t^2 - 12*H^2*L^2*d1^2*t^4 - 12*H^2*L^2*d2^2*t^4 - 4*H^2*L^2*d1^2*t^6 - 4*H^2*L^2*d2^2*t^6 + 8*H*d1*r^4*t + 2*H*d1^4*r*t + 8*H*d2*r^4*t - 2*H*d2^4*r*t - 16*H*d3*r^4*t + 4*H^2*L^2*r^2*t^2 + 4*H^2*L^2*r^2*t^4 - 4*H^2*L^2*r^2*t^6 + 6*d1*d2^3*d3*r - 6*d1^3*d2*d3*r + 6*H^2*d1^2*d2^2*t^2 + 6*H^2*d1^2*d3^2*t^2 + 6*H^2*d1^2*d2^2*t^4 + 6*H^2*d2^2*d3^2*t^2 + 6*H^2*d1^2*d3^2*t^4 + 2*H^2*d1^2*d2^2*t^6 + 6*H^2*d2^2*d3^2*t^4 + 2*H^2*d1^2*d3^2*t^6 + 2*H^2*d2^2*d3^2*t^6 - 2*3^(1/2)*d1*r^5*t - 2*3^(1/2)*d2*r^5*t + 4*3^(1/2)*d3*r^5*t + 6*H^2*d3^2*r^2*t^2 + 8*H^2*d1^2*r^2*t^6 + 6*H^2*d3^2*r^2*t^4 + 8*H^2*d2^2*r^2*t^6 + 2*H^2*d3^2*r^2*t^6 - L^2*d1^2*r^2*t^2 - L^2*d2^2*r^2*t^2 - L^2*d1^2*r^2*t^4 - 16*L^2*d3^2*r^2*t^2 - L^2*d2^2*r^2*t^4 - 3*L^2*d1^2*r^2*t^6 - 16*L^2*d3^2*r^2*t^4 - 3*L^2*d2^2*r^2*t^6 + 8*H^2*L^2*d1*d2 - 18*d1^2*d2^2*d3^2*t^2 - 18*d1^2*d2^2*d3^2*t^4 - 6*d1^2*d2^2*d3^2*t^6 + 4*3^(1/2)*H*L^2*r^3 - 8*H^2*L^2*d1*r + 8*H^2*L^2*d2*r - 21*d1^2*d2^2*r^2*t^2 + 24*d1^2*d3^2*r^2*t^2 - 21*d1^2*d2^2*r^2*t^4 + 24*d2^2*d3^2*r^2*t^2 + 24*d1^2*d3^2*r^2*t^4 + 9*d1^2*d2^2*r^2*t^6 + 24*d2^2*d3^2*r^2*t^4 - 4*H^2*d1*d2*d3^2 + 2*H^2*d1*d2^2*d3 + 2*H^2*d1^2*d2*d3 - 5*3^(1/2)*H*d1^2*r^3 - 3*3^(1/2)*H*d1^3*r^2 - 4*3^(1/2)*H^3*d1*r^2 - 2*3^(1/2)*H^3*d1^2*r - 5*3^(1/2)*H*d2^2*r^3 + 3*3^(1/2)*H*d2^3*r^2 + 4*3^(1/2)*H^3*d2*r^2 - 2*3^(1/2)*H^3*d2^2*r - 2*3^(1/2)*H*d3^2*r^3 - 14*H^2*d1*d2*r^2 + 5*H^2*d1*d2^2*r - 5*H^2*d1^2*d2*r - 2*H^2*d1*d3*r^2 + 4*H^2*d1*d3^2*r - 4*H^2*d1^2*d3*r - 2*H^2*d2*d3*r^2 - 4*H^2*d2*d3^2*r + 4*H^2*d2^2*d3*r - 6*H^4*d1*d2*t^2 - 6*H^4*d1*d2*t^4 - 2*H^4*d1*d2*t^6 + 6*L^2*d1*d2*r^2 - 2*3^(1/2)*H*r^5*t^2 + 2*3^(1/2)*H*r^5*t^4 + 2*3^(1/2)*H*r^5*t^6 + 18*H*d1^2*r^3*t + 12*H*d1^3*r^2*t - 18*H*d2^2*r^3*t + 12*H*d2^3*r^2*t + 2*H^4*d1*r*t^2 + 4*H*d1^4*r*t^3 - 2*H^4*d2*r*t^2 - 4*H*d2^4*r*t^3 - 2*H^4*d1*r*t^4 - 8*H*d1*r^4*t^5 + 2*H*d1^4*r*t^5 + 2*H^4*d2*r*t^4 - 8*H*d2*r^4*t^5 - 2*H*d2^4*r*t^5 - 2*H^4*d1*r*t^6 + 16*H*d3*r^4*t^5 + 2*H^4*d2*r*t^6 + 6*d1*d2*d3^2*r^2 - 3*d1*d2^2*d3*r^2 - 9*d1*d2^2*d3^2*r - 3*d1^2*d2*d3*r^2 + 9*d1^2*d2*d3^2*r - 6*d1*d2*d3^4*t^2 - 6*d1*d2^4*d3*t^2 - 6*d1^4*d2*d3*t^2 - 6*d1*d2*d3^4*t^4 - 6*d1*d2^4*d3*t^4 - 6*d1^4*d2*d3*t^4 - 2*d1*d2*d3^4*t^6 - 2*d1*d2^4*d3*t^6 - 2*d1^4*d2*d3*t^6 - 4*3^(1/2)*d1^2*r^4*t - 2*3^(1/2)*d1^3*r^3*t + 4*3^(1/2)*d2^2*r^4*t - 2*3^(1/2)*d2^3*r^3*t - 4*3^(1/2)*d1*r^5*t^3 + 4*3^(1/2)*d3^3*r^3*t - 4*3^(1/2)*d2*r^5*t^3 - 2*3^(1/2)*d1*r^5*t^5 + 8*3^(1/2)*d3*r^5*t^3 - 2*3^(1/2)*d2*r^5*t^5 + 4*3^(1/2)*d3*r^5*t^5 + 11*d1*d2*r^4*t^2 + d1*d2^4*r*t^2 - d1^4*d2*r*t^2 - 19*d1*d3*r^4*t^2 + 2*d1*d3^4*r*t^2 + d1^4*d3*r*t^2 + 11*d1*d2*r^4*t^4 - d1*d2^4*r*t^4 - 19*d2*d3*r^4*t^2 - 2*d2*d3^4*r*t^2 + d1^4*d2*r*t^4 - d2^4*d3*r*t^2 - 19*d1*d3*r^4*t^4 - 2*d1*d3^4*r*t^4 - d1^4*d3*r*t^4 - 7*d1*d2*r^4*t^6 - d1*d2^4*r*t^6 - 19*d2*d3*r^4*t^4 + 2*d2*d3^4*r*t^4 + d1^4*d2*r*t^6 + d2^4*d3*r*t^4 - d1*d3*r^4*t^6 - 2*d1*d3^4*r*t^6 - d1^4*d3*r*t^6 - d2*d3*r^4*t^6 + 2*d2*d3^4*r*t^6 + d2^4*d3*r*t^6 - 2*3^(1/2)*H^2*d1*r^3*t - 2*3^(1/2)*H^2*d1^3*r*t + 3^(1/2)*H*d1*r^4*t^2 - 3^(1/2)*H*d1^4*r*t^2 - 2*3^(1/2)*H^2*d2*r^3*t - 2*3^(1/2)*H^2*d2^3*r*t - 3^(1/2)*H*d2*r^4*t^2 - 3^(1/2)*H*d2^4*r*t^2 + 4*3^(1/2)*H^2*d3*r^3*t + 3^(1/2)*H*d1*r^4*t^4 + 3^(1/2)*H*d1^4*r*t^4 - 3^(1/2)*H*d2*r^4*t^4 + 3^(1/2)*H*d2^4*r*t^4 - 5*3^(1/2)*H*d1*r^4*t^6 + 3^(1/2)*H*d1^4*r*t^6 + 5*3^(1/2)*H*d2*r^4*t^6 + 3^(1/2)*H*d2^4*r*t^6 + 4*3^(1/2)*L^2*d1*r^3*t + 4*3^(1/2)*L^2*d2*r^3*t - 8*3^(1/2)*L^2*d3*r^3*t - 12*H*d1*d2^2*r^2*t - 12*H*d1^2*d2*r^2*t - 24*H*d1^2*d3*r^2*t + 8*H*d1*d2^3*r*t^3 - 8*H*d1^3*d2*r*t^3 - 24*H*d2^2*d3*r^2*t + 56*H*d1*d3*r^3*t^3 - 8*H*d1^3*d3*r*t^3 + 4*H*d1*d2^3*r*t^5 - 56*H*d2*d3*r^3*t^3 - 4*H*d1^3*d2*r*t^5 + 8*H*d2^3*d3*r*t^3 - 36*H*d1*d3*r^3*t^5 - 4*H*d1^3*d3*r*t^5 + 36*H*d2*d3*r^3*t^5 + 4*H*d2^3*d3*r*t^5 + 4*3^(1/2)*d1*d2^3*r^2*t + 2*3^(1/2)*d1^2*d2^3*r*t - 4*3^(1/2)*d1^3*d2*r^2*t + 2*3^(1/2)*d1^3*d2^2*r*t - 6*3^(1/2)*d1*d3^2*r^3*t + 8*3^(1/2)*d1*d3^3*r^2*t + 6*3^(1/2)*d1^2*d3*r^3*t + 4*3^(1/2)*d1^2*d3^3*r*t + 4*3^(1/2)*d1^3*d3*r^2*t - 6*3^(1/2)*d1^3*d3^2*r*t - 4*3^(1/2)*d1*d2^4*r*t^3 - 6*3^(1/2)*d2*d3^2*r^3*t - 8*3^(1/2)*d2*d3^3*r^2*t + 6*3^(1/2)*d2^2*d3*r^3*t + 4*3^(1/2)*d2^2*d3^3*r*t - 4*3^(1/2)*d1^4*d2*r*t^3 - 4*3^(1/2)*d2^3*d3*r^2*t - 6*3^(1/2)*d2^3*d3^2*r*t + 4*3^(1/2)*d1^4*d3*r*t^3 - 2*3^(1/2)*d1*d2^4*r*t^5 - 2*3^(1/2)*d1^4*d2*r*t^5 + 4*3^(1/2)*d2^4*d3*r*t^3 - 8*3^(1/2)*d1*d3*r^4*t^5 + 2*3^(1/2)*d1^4*d3*r*t^5 + 8*3^(1/2)*d2*d3*r^4*t^5 + 2*3^(1/2)*d2^4*d3*r*t^5 + 6*d1*d2^3*d3*r*t^2 - 6*d1^3*d2*d3*r*t^2 - 6*d1*d2^3*d3*r*t^4 + 6*d1^3*d2*d3*r*t^4 - 6*d1*d2^3*d3*r*t^6 + 6*d1^3*d2*d3*r*t^6 + 24*H^2*L^2*d1*d2*t^2 + 24*H^2*L^2*d1*d2*t^4 + 8*H^2*L^2*d1*d2*t^6 + 4*3^(1/2)*H*L^2*r^3*t^2 - 4*3^(1/2)*H*L^2*r^3*t^4 - 4*3^(1/2)*H*L^2*r^3*t^6 - 8*H^2*L^2*d1*r*t^2 - 16*H*L^2*d1^2*r*t^3 + 8*H^2*L^2*d2*r*t^2 + 16*H*L^2*d2^2*r*t^3 + 8*H^2*L^2*d1*r*t^4 + 8*H*L^2*d1*r^2*t^5 - 8*H*L^2*d1^2*r*t^5 - 8*H^2*L^2*d2*r*t^4 + 8*H*L^2*d2*r^2*t^5 + 8*H*L^2*d2^2*r*t^5 + 8*H^2*L^2*d1*r*t^6 - 16*H*L^2*d3*r^2*t^5 - 8*H^2*L^2*d2*r*t^6 - 12*H^2*d1*d2*d3^2*t^2 + 6*H^2*d1*d2^2*d3*t^2 + 6*H^2*d1^2*d2*d3*t^2 - 12*H^2*d1*d2*d3^2*t^4 + 6*H^2*d1*d2^2*d3*t^4 + 6*H^2*d1^2*d2*d3*t^4 - 4*H^2*d1*d2*d3^2*t^6 + 2*H^2*d1*d2^2*d3*t^6 + 2*H^2*d1^2*d2*d3*t^6 - 4*3^(1/2)*H^2*d1^2*r^2*t - 5*3^(1/2)*H*d1^2*r^3*t^2 - 3^(1/2)*H*d1^3*r^2*t^2 + 4*3^(1/2)*H^2*d2^2*r^2*t + 4*3^(1/2)*H^3*d1*r^2*t^2 - 2*3^(1/2)*H^3*d1^2*r*t^2 - 5*3^(1/2)*H*d2^2*r^3*t^2 + 3^(1/2)*H*d2^3*r^2*t^2 - 4*3^(1/2)*H^2*d1*r^3*t^3 - 4*3^(1/2)*H^2*d1^3*r*t^3 - 4*3^(1/2)*H^3*d2*r^2*t^2 - 2*3^(1/2)*H^3*d2^2*r*t^2 + 5*3^(1/2)*H*d1^2*r^3*t^4 - 3^(1/2)*H*d1^3*r^2*t^4 - 2*3^(1/2)*H*d3^2*r^3*t^2 - 4*3^(1/2)*H^2*d2*r^3*t^3 - 4*3^(1/2)*H^2*d2^3*r*t^3 + 4*3^(1/2)*H^3*d1*r^2*t^4 + 2*3^(1/2)*H^3*d1^2*r*t^4 + 5*3^(1/2)*H*d2^2*r^3*t^4 + 3^(1/2)*H*d2^3*r^2*t^4 - 2*3^(1/2)*H^2*d1*r^3*t^5 + 8*3^(1/2)*H^2*d3*r^3*t^3 - 2*3^(1/2)*H^2*d1^3*r*t^5 - 4*3^(1/2)*H^3*d2*r^2*t^4 + 2*3^(1/2)*H^3*d2^2*r*t^4 + 5*3^(1/2)*H*d1^2*r^3*t^6 - 3*3^(1/2)*H*d1^3*r^2*t^6 + 2*3^(1/2)*H*d3^2*r^3*t^4 - 2*3^(1/2)*H^2*d2*r^3*t^5 - 2*3^(1/2)*H^2*d2^3*r*t^5 - 4*3^(1/2)*H^3*d1*r^2*t^6 + 2*3^(1/2)*H^3*d1^2*r*t^6 + 5*3^(1/2)*H*d2^2*r^3*t^6 + 3*3^(1/2)*H*d2^3*r^2*t^6 + 4*3^(1/2)*H^2*d3*r^3*t^5 + 4*3^(1/2)*H^3*d2*r^2*t^6 + 2*3^(1/2)*H^3*d2^2*r*t^6 + 2*3^(1/2)*H*d3^2*r^3*t^6 + 4*3^(1/2)*L^2*d1^2*r^2*t - 4*3^(1/2)*L^2*d2^2*r^2*t + 8*3^(1/2)*L^2*d1*r^3*t^3 + 8*3^(1/2)*L^2*d2*r^3*t^3 + 4*3^(1/2)*L^2*d1*r^3*t^5 - 16*3^(1/2)*L^2*d3*r^3*t^3 + 4*3^(1/2)*L^2*d2*r^3*t^5 - 8*3^(1/2)*L^2*d3*r^3*t^5 + 6*H^2*d1*d2*r^2*t^2 + 5*H^2*d1*d2^2*r*t^2 - 5*H^2*d1^2*d2*r*t^2 - 6*H^2*d1*d3*r^2*t^2 + 4*H^2*d1*d3^2*r*t^2 - 4*H^2*d1^2*d3*r*t^2 + 6*H^2*d1*d2*r^2*t^4 - 5*H^2*d1*d2^2*r*t^4 - 6*H^2*d2*d3*r^2*t^2 - 4*H^2*d2*d3^2*r*t^2 + 5*H^2*d1^2*d2*r*t^4 + 4*H^2*d2^2*d3*r*t^2 + 12*H*d1*d2^2*r^2*t^5 + 12*H*d1^2*d2*r^2*t^5 - 6*H^2*d1*d3*r^2*t^4 - 4*H^2*d1*d3^2*r*t^4 + 4*H^2*d1^2*d3*r*t^4 + 24*H*d1^2*d3*r^2*t^5 - 14*H^2*d1*d2*r^2*t^6 - 5*H^2*d1*d2^2*r*t^6 - 6*H^2*d2*d3*r^2*t^4 + 4*H^2*d2*d3^2*r*t^4 + 5*H^2*d1^2*d2*r*t^6 - 4*H^2*d2^2*d3*r*t^4 + 24*H*d2^2*d3*r^2*t^5 - 2*H^2*d1*d3*r^2*t^6 - 4*H^2*d1*d3^2*r*t^6 + 4*H^2*d1^2*d3*r*t^6 - 2*H^2*d2*d3*r^2*t^6 + 4*H^2*d2*d3^2*r*t^6 - 4*H^2*d2^2*d3*r*t^6 - 14*L^2*d1*d2*r^2*t^2 + 16*L^2*d1*d3*r^2*t^2 - 14*L^2*d1*d2*r^2*t^4 + 16*L^2*d2*d3*r^2*t^2 + 16*L^2*d1*d3*r^2*t^4 + 6*L^2*d1*d2*r^2*t^6 + 16*L^2*d2*d3*r^2*t^4 - 12*3^(1/2)*d1^2*d3^2*r^2*t + 4*3^(1/2)*d1^2*d2^3*r*t^3 + 4*3^(1/2)*d1^3*d2^2*r*t^3 + 12*3^(1/2)*d2^2*d3^2*r^2*t - 12*3^(1/2)*d1*d3^2*r^3*t^3 + 12*3^(1/2)*d1^2*d3*r^3*t^3 + 8*3^(1/2)*d1^2*d3^3*r*t^3 - 12*3^(1/2)*d1^3*d3^2*r*t^3 - 4*3^(1/2)*d1*d2^3*r^2*t^5 - 12*3^(1/2)*d2*d3^2*r^3*t^3 + 2*3^(1/2)*d1^2*d2^3*r*t^5 + 4*3^(1/2)*d1^3*d2*r^2*t^5 + 2*3^(1/2)*d1^3*d2^2*r*t^5 + 12*3^(1/2)*d2^2*d3*r^3*t^3 + 8*3^(1/2)*d2^2*d3^3*r*t^3 - 12*3^(1/2)*d2^3*d3^2*r*t^3 - 6*3^(1/2)*d1*d3^2*r^3*t^5 - 8*3^(1/2)*d1*d3^3*r^2*t^5 + 6*3^(1/2)*d1^2*d3*r^3*t^5 + 4*3^(1/2)*d1^2*d3^3*r*t^5 - 4*3^(1/2)*d1^3*d3*r^2*t^5 - 6*3^(1/2)*d1^3*d3^2*r*t^5 - 6*3^(1/2)*d2*d3^2*r^3*t^5 + 8*3^(1/2)*d2*d3^3*r^2*t^5 + 6*3^(1/2)*d2^2*d3*r^3*t^5 + 4*3^(1/2)*d2^2*d3^3*r*t^5 + 4*3^(1/2)*d2^3*d3*r^2*t^5 - 6*3^(1/2)*d2^3*d3^2*r*t^5 - 30*d1*d2*d3^2*r^2*t^2 + 15*d1*d2^2*d3*r^2*t^2 - 9*d1*d2^2*d3^2*r*t^2 + 15*d1^2*d2*d3*r^2*t^2 + 9*d1^2*d2*d3^2*r*t^2 - 30*d1*d2*d3^2*r^2*t^4 + 15*d1*d2^2*d3*r^2*t^4 + 9*d1*d2^2*d3^2*r*t^4 + 15*d1^2*d2*d3*r^2*t^4 - 9*d1^2*d2*d3^2*r*t^4 + 6*d1*d2*d3^2*r^2*t^6 - 3*d1*d2^2*d3*r^2*t^6 + 9*d1*d2^2*d3^2*r*t^6 - 3*d1^2*d2*d3*r^2*t^6 - 9*d1^2*d2*d3^2*r*t^6 + 8*3^(1/2)*H*d1*d2*r^3 + 2*3^(1/2)*H*d1*d2^3*r + 2*3^(1/2)*H*d1^3*d2*r + 4*3^(1/2)*H^3*d1*d2*r + 2*3^(1/2)*H*d1*d3*r^3 + 2*3^(1/2)*H*d1^3*d3*r + 2*3^(1/2)*H*d2*d3*r^3 + 2*3^(1/2)*H*d2^3*d3*r + 4*H*d1*d2^3*r*t - 4*H*d1^3*d2*r*t - 36*H*d1*d3*r^3*t - 4*H*d1^3*d3*r*t + 36*H*d2*d3*r^3*t + 4*H*d2^3*d3*r*t - 2*3^(1/2)*d1*d2^4*r*t - 2*3^(1/2)*d1^4*d2*r*t + 8*3^(1/2)*d1*d3*r^4*t + 2*3^(1/2)*d1^4*d3*r*t - 8*3^(1/2)*d2*d3*r^4*t + 2*3^(1/2)*d2^4*d3*r*t + 4*3^(1/2)*H^2*d1^2*r^2*t^5 - 4*3^(1/2)*H^2*d2^2*r^2*t^5 - 4*3^(1/2)*L^2*d1^2*r^2*t^5 + 4*3^(1/2)*L^2*d2^2*r^2*t^5 + 8*3^(1/2)*H*L^2*d1*r^2 + 4*3^(1/2)*H*L^2*d1^2*r - 8*3^(1/2)*H*L^2*d2*r^2 + 4*3^(1/2)*H*L^2*d2^2*r + 12*3^(1/2)*d1^2*d3^2*r^2*t^5 - 12*3^(1/2)*d2^2*d3^2*r^2*t^5 - 8*H*L^2*d1*r^2*t - 8*H*L^2*d1^2*r*t - 8*H*L^2*d2*r^2*t + 8*H*L^2*d2^2*r*t + 16*H*L^2*d3*r^2*t - 5*3^(1/2)*H*d1*d2^2*r^2 + 5*3^(1/2)*H*d1^2*d2*r^2 - 2*3^(1/2)*H*d1^2*d2^2*r - 4*3^(1/2)*H*d1*d3^2*r^2 + 4*3^(1/2)*H*d1^2*d3*r^2 - 2*3^(1/2)*H*d1^2*d3^2*r + 4*3^(1/2)*H*d2*d3^2*r^2 - 4*3^(1/2)*H*d2^2*d3*r^2 - 2*3^(1/2)*H*d2^2*d3^2*r + 16*H*L^2*d1*d3*r*t - 16*H*L^2*d2*d3*r*t + 4*3^(1/2)*H*d1*d2*d3^2*r - 2*3^(1/2)*H*d1*d2^2*d3*r - 2*3^(1/2)*H*d1^2*d2*d3*r + 48*H*d1*d2*d3*r^2*t - 12*H*d1*d2^2*d3*r*t + 12*H*d1^2*d2*d3*r*t - 8*3^(1/2)*d1*d2*d3^3*r*t + 4*3^(1/2)*d1*d2^3*d3*r*t + 4*3^(1/2)*d1^3*d2*d3*r*t + 32*H*L^2*d1*d3*r*t^3 - 32*H*L^2*d2*d3*r*t^3 + 16*H*L^2*d1*d3*r*t^5 - 16*H*L^2*d2*d3*r*t^5 + 2*3^(1/2)*H^2*d1*d2^2*r*t + 2*3^(1/2)*H^2*d1^2*d2*r*t + 8*3^(1/2)*H*d1*d2*r^3*t^2 + 2*3^(1/2)*H*d1*d2^3*r*t^2 + 2*3^(1/2)*H*d1^3*d2*r*t^2 + 8*3^(1/2)*H^2*d1*d3*r^2*t + 4*3^(1/2)*H^2*d1^2*d3*r*t + 4*3^(1/2)*H^3*d1*d2*r*t^2 + 2*3^(1/2)*H*d1*d3*r^3*t^2 + 2*3^(1/2)*H*d1^3*d3*r*t^2 - 8*3^(1/2)*H^2*d2*d3*r^2*t + 4*3^(1/2)*H^2*d2^2*d3*r*t - 8*3^(1/2)*H*d1*d2*r^3*t^4 - 2*3^(1/2)*H*d1*d2^3*r*t^4 + 2*3^(1/2)*H*d2*d3*r^3*t^2 - 2*3^(1/2)*H*d1^3*d2*r*t^4 + 2*3^(1/2)*H*d2^3*d3*r*t^2 - 4*3^(1/2)*H^3*d1*d2*r*t^4 - 2*3^(1/2)*H*d1*d3*r^3*t^4 - 2*3^(1/2)*H*d1^3*d3*r*t^4 - 8*3^(1/2)*H*d1*d2*r^3*t^6 - 2*3^(1/2)*H*d1*d2^3*r*t^6 - 2*3^(1/2)*H*d2*d3*r^3*t^4 - 2*3^(1/2)*H*d1^3*d2*r*t^6 - 2*3^(1/2)*H*d2^3*d3*r*t^4 - 4*3^(1/2)*H^3*d1*d2*r*t^6 - 2*3^(1/2)*H*d1*d3*r^3*t^6 - 2*3^(1/2)*H*d1^3*d3*r*t^6 - 2*3^(1/2)*H*d2*d3*r^3*t^6 - 2*3^(1/2)*H*d2^3*d3*r*t^6 - 8*3^(1/2)*L^2*d1*d3*r^2*t + 8*3^(1/2)*L^2*d2*d3*r^2*t - 24*H*d1*d2^2*d3*r*t^3 + 24*H*d1^2*d2*d3*r*t^3 - 48*H*d1*d2*d3*r^2*t^5 - 12*H*d1*d2^2*d3*r*t^5 + 12*H*d1^2*d2*d3*r*t^5 - 12*3^(1/2)*d1*d2^2*d3*r^2*t + 6*3^(1/2)*d1*d2^2*d3^2*r*t + 12*3^(1/2)*d1^2*d2*d3*r^2*t + 6*3^(1/2)*d1^2*d2*d3^2*r*t - 12*3^(1/2)*d1^2*d2^2*d3*r*t - 16*3^(1/2)*d1*d2*d3^3*r*t^3 + 8*3^(1/2)*d1*d2^3*d3*r*t^3 + 8*3^(1/2)*d1^3*d2*d3*r*t^3 - 8*3^(1/2)*d1*d2*d3^3*r*t^5 + 4*3^(1/2)*d1*d2^3*d3*r*t^5 + 4*3^(1/2)*d1^3*d2*d3*r*t^5 + 8*3^(1/2)*H*L^2*d1*r^2*t^2 + 4*3^(1/2)*H*L^2*d1^2*r*t^2 - 8*3^(1/2)*H*L^2*d2*r^2*t^2 + 4*3^(1/2)*H*L^2*d2^2*r*t^2 + 8*3^(1/2)*H*L^2*d1*r^2*t^4 - 4*3^(1/2)*H*L^2*d1^2*r*t^4 - 8*3^(1/2)*H*L^2*d2*r^2*t^4 - 4*3^(1/2)*H*L^2*d2^2*r*t^4 + 8*3^(1/2)*H*L^2*d1*r^2*t^6 - 4*3^(1/2)*H*L^2*d1^2*r*t^6 - 8*3^(1/2)*H*L^2*d2*r^2*t^6 - 4*3^(1/2)*H*L^2*d2^2*r*t^6 - 7*3^(1/2)*H*d1*d2^2*r^2*t^2 + 7*3^(1/2)*H*d1^2*d2*r^2*t^2 - 2*3^(1/2)*H*d1^2*d2^2*r*t^2 + 4*3^(1/2)*H*d1*d3^2*r^2*t^2 - 4*3^(1/2)*H*d1^2*d3*r^2*t^2 - 2*3^(1/2)*H*d1^2*d3^2*r*t^2 + 4*3^(1/2)*H^2*d1*d2^2*r*t^3 + 4*3^(1/2)*H^2*d1^2*d2*r*t^3 - 7*3^(1/2)*H*d1*d2^2*r^2*t^4 - 4*3^(1/2)*H*d2*d3^2*r^2*t^2 + 7*3^(1/2)*H*d1^2*d2*r^2*t^4 + 2*3^(1/2)*H*d1^2*d2^2*r*t^4 + 4*3^(1/2)*H*d2^2*d3*r^2*t^2 - 2*3^(1/2)*H*d2^2*d3^2*r*t^2 + 8*3^(1/2)*H^2*d1^2*d3*r*t^3 + 4*3^(1/2)*H*d1*d3^2*r^2*t^4 - 4*3^(1/2)*H*d1^2*d3*r^2*t^4 + 2*3^(1/2)*H*d1^2*d3^2*r*t^4 + 2*3^(1/2)*H^2*d1*d2^2*r*t^5 + 2*3^(1/2)*H^2*d1^2*d2*r*t^5 + 8*3^(1/2)*H^2*d2^2*d3*r*t^3 - 5*3^(1/2)*H*d1*d2^2*r^2*t^6 - 4*3^(1/2)*H*d2*d3^2*r^2*t^4 + 5*3^(1/2)*H*d1^2*d2*r^2*t^6 + 2*3^(1/2)*H*d1^2*d2^2*r*t^6 + 4*3^(1/2)*H*d2^2*d3*r^2*t^4 + 2*3^(1/2)*H*d2^2*d3^2*r*t^4 - 8*3^(1/2)*H^2*d1*d3*r^2*t^5 + 4*3^(1/2)*H^2*d1^2*d3*r*t^5 - 4*3^(1/2)*H*d1*d3^2*r^2*t^6 + 4*3^(1/2)*H*d1^2*d3*r^2*t^6 + 2*3^(1/2)*H*d1^2*d3^2*r*t^6 + 8*3^(1/2)*H^2*d2*d3*r^2*t^5 + 4*3^(1/2)*H^2*d2^2*d3*r*t^5 + 4*3^(1/2)*H*d2*d3^2*r^2*t^6 - 4*3^(1/2)*H*d2^2*d3*r^2*t^6 + 2*3^(1/2)*H*d2^2*d3^2*r*t^6 + 8*3^(1/2)*L^2*d1*d3*r^2*t^5 - 8*3^(1/2)*L^2*d2*d3*r^2*t^5 - 8*3^(1/2)*H*L^2*d1*d2*r + 12*3^(1/2)*d1*d2^2*d3^2*r*t^3 + 12*3^(1/2)*d1^2*d2*d3^2*r*t^3 - 24*3^(1/2)*d1^2*d2^2*d3*r*t^3 + 12*3^(1/2)*d1*d2^2*d3*r^2*t^5 + 6*3^(1/2)*d1*d2^2*d3^2*r*t^5 - 12*3^(1/2)*d1^2*d2*d3*r^2*t^5 + 6*3^(1/2)*d1^2*d2*d3^2*r*t^5 - 12*3^(1/2)*d1^2*d2^2*d3*r*t^5 - 8*3^(1/2)*H^2*d1*d2*d3*r*t - 8*3^(1/2)*H*L^2*d1*d2*r*t^2 + 8*3^(1/2)*H*L^2*d1*d2*r*t^4 + 8*3^(1/2)*H*L^2*d1*d2*r*t^6 + 4*3^(1/2)*H*d1*d2*d3^2*r*t^2 - 2*3^(1/2)*H*d1*d2^2*d3*r*t^2 - 2*3^(1/2)*H*d1^2*d2*d3*r*t^2 - 16*3^(1/2)*H^2*d1*d2*d3*r*t^3 - 4*3^(1/2)*H*d1*d2*d3^2*r*t^4 + 2*3^(1/2)*H*d1*d2^2*d3*r*t^4 + 2*3^(1/2)*H*d1^2*d2*d3*r*t^4 - 8*3^(1/2)*H^2*d1*d2*d3*r*t^5 - 4*3^(1/2)*H*d1*d2*d3^2*r*t^6 + 2*3^(1/2)*H*d1*d2^2*d3*r*t^6 + 2*3^(1/2)*H*d1^2*d2*d3*r*t^6;
poly = sym2poly(polynom);
t = roots(poly); % solutions for different t - grab only real options.
t = t(imag(t)==0); % take only real solutions for t
x = zeros(3, length(t));
for i=1:length(t)
    c_theta = (1-t(i)^2)/(1+t(i)^2);
    s_theta = 2*t(i)/(1+t(i)^2);
    theta = atan2(s_theta,c_theta);
    x1 = -(r^3*sin(theta) - 2*H*d1^2 + 2*H*d2^2 + 2*H^2*r*sin(theta) - 3^(1/2)*r^3*cos(theta) - d1^2*r*sin(theta) - d2^2*r*sin(theta) + 2*d3^2*r*sin(theta) + 2*H*r^2*cos(theta)^2 + d2*r^2*sin(2*theta) - d3*r^2*sin(2*theta) + 2*3^(1/2)*d3*r^2 - 3^(1/2)*H*r^2*sin(2*theta) + 2*3^(1/2)*d2*r^2*cos(theta)^2 - 2*3^(1/2)*d3*r^2*cos(theta)^2 - 4*H*d2*r*cos(theta) + 3^(1/2)*d1^2*r*cos(theta) - 3^(1/2)*d2^2*r*cos(theta))/(2*(2*H*d1 - 2*H*d2 - 3^(1/2)*r^2 + d1*r*sin(theta) + d2*r*sin(theta) - 2*d3*r*sin(theta) + 2*H*r*cos(theta) - 3^(1/2)*d1*r*cos(theta) + 3^(1/2)*d2*r*cos(theta)));
    y1 = -(2*H^2*d2 - 2*H^2*d1 - r^3*cos(theta) + 2*d1*d2^2 - 2*d1^2*d2 - 2*d1*d3^2 + 2*d1^2*d3 + 2*d2*d3^2 - 2*d2^2*d3 + d2*r^2 - d3*r^2 - 2*H^2*r*cos(theta) + d1^2*r*cos(theta) + d2^2*r*cos(theta) - 2*d3^2*r*cos(theta) - 3^(1/2)*r^3*sin(theta) + H*r^2*sin(2*theta) - d2*r^2*cos(2*theta) + d3*r^2*cos(2*theta) + 3^(1/2)*H*r^2 + 3^(1/2)*H*r^2*cos(2*theta) + 3^(1/2)*d2*r^2*sin(2*theta) - 3^(1/2)*d3*r^2*sin(2*theta) + 2*H*d1*r*sin(theta) - 2*H*d2*r*sin(theta) - 4*d1*d2*r*cos(theta) + 2*d1*d3*r*cos(theta) + 2*d2*d3*r*cos(theta) + 3^(1/2)*d1^2*r*sin(theta) - 3^(1/2)*d2^2*r*sin(theta) + 2*3^(1/2)*H*d1*r*cos(theta) - 2*3^(1/2)*H*d2*r*cos(theta) - 2*3^(1/2)*d1*d3*r*sin(theta) + 2*3^(1/2)*d2*d3*r*sin(theta))/(2*(2*H*d1 - 2*H*d2 - 3^(1/2)*r^2 + d1*r*sin(theta) + d2*r*sin(theta) - 2*d3*r*sin(theta) + 2*H*r*cos(theta) - 3^(1/2)*d1*r*cos(theta) + 3^(1/2)*d2*r*cos(theta)));
    x(1:3,i) = [x1; y1; theta];
    draw_parallel_robot([x1; y1; theta], q)         
end

if isempty(t)
    display(q)
    error("No Real Solution found for the FK problem for these inputs")
end

end


